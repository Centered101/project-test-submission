<!DOCTYPE html>
<html lang="th">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Responsive Grid Layout</title>
    <meta name="theme-color" content="#F5A623">
    <link rel="stylesheet" href="styles.css">
</head>
<style>
    /* font จาก google fonts */
    /* font-family: 'Press Start 2P', system-ui; */
    @import url("https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap");
    /* font-family: 'Bai Jamjuree', sans-serif; */
    @import url("https://fonts.googleapis.com/css2?family=Bai+Jamjuree&display=swap");

    * {
        margin: 0;
        padding: 0;
    }

    body {
        text-align: center;
        font-weight: bold;
        font-family: 'Bai Jamjuree', sans-serif;
    }

    /* Desktop View */
    .container {
        display: grid;
        grid-template-rows: 80px auto 1fr auto 50px;
        grid-template-columns: 1fr 4fr 1fr;
        height: 100vh;
        grid-template-areas:
            "header header header"
            "left-aside banner right-aside"
            "left-aside main right-aside"
            "left-aside low-content right-aside"
            "footer footer footer";
    }

    .header {
        grid-area: header;
        background-color: #8EACCD;
    }

    .banner {
        grid-area: banner;
        background-color: #DEE5D4;
    }

    .left-aside {
        grid-area: left-aside;
        background-color: #FEF9D9;
    }

    .main {
        grid-area: main;
        background-color: #D2E0FB;
    }

    .right-aside {
        grid-area: right-aside;
        background-color: #FEF9D9;
    }

    .low-content {
        grid-area: low-content;
        background-color: #DEE5D4;
    }

    .footer {
        grid-area: footer;
        background-color: #8EACCD;
    }

    /* Mobile View */
    @media (max-width: 678px) {
        .container {
            grid-template-rows: 50px 50px 50px 1fr 50px 50px 50px;
            grid-template-columns: 1fr;
            grid-template-areas:
                "header"
                "banner"
                "left-aside"
                "main"
                "right-aside"
                "low-content"
                "footer";
        }
    }

    #screen-size {
        position: fixed;
        bottom: 10px;
        left: 10px;
        background-color: #000000b3;
        color: white;
        padding: 10px;
        border-radius: 5px;
        font-family: Arial, sans-serif;
    }

    /* โหมดสว่าง (ค่าเริ่มต้น) */
    body {
        background-color: white;
        color: black;
    }

    /* โหมดมืด */
    [data-theme="dark"] {
        background-color: black;
        color: white;
    }
</style>

<body>
    <div class="container">
        <div class="header">Header</div>
        <div class="banner">Banner</div>
        <div class="left-aside">Left Aside</div>
        <div class="main">Main Content</div>
        <div class="right-aside">Right Aside</div>
        <div class="low-content">Low Content</div>
        <div class="footer">Footer</div>
    </div>
    <div id="screen-size"></div>
</body>
<script>
    // ฟังก์ชั่นอัพเดตขนาดหน้าจอ
    function updateScreenSize() {
        const width = window.innerWidth;
        const height = window.innerHeight;
        document.querySelector("#screen-size").innerHTML = `ขนาดหน้าจอ: ${width} ⨉ ${height}`;
    }

    // การตรวจสอบเบื้องต้น
    updateScreenSize();

    // ฟังเหตุการณ์สำหรับการปรับขนาดหน้าต่าง
    window.addEventListener('resize', updateScreenSize);


    // ฟังก์ชันเพื่อตรวจสอบโหมดของผู้ใช้งาน
    function applyTheme(theme) {
        if (theme === 'dark') {
            document.documentElement.setAttribute('data-theme', 'dark');
        } else {
            document.documentElement.setAttribute('data-theme', 'light');
        }
    }

    // ตรวจสอบการตั้งค่าโหมดสีของผู้ใช้งาน
    const userPrefersDark = window.matchMedia('(prefers-color-scheme: dark)');

    // ตั้งค่าโหมดตามการตั้งค่าของผู้ใช้งาน
    applyTheme(userPrefersDark.matches ? 'dark' : 'light');

    // ฟังค์ชันที่รับการเปลี่ยนแปลงเมื่อผู้ใช้เปลี่ยนการตั้งค่าโหมดสีในระบบ
    userPrefersDark.addEventListener('change', (event) => {
        applyTheme(event.matches ? 'dark' : 'light');
    });

</script>

</html>